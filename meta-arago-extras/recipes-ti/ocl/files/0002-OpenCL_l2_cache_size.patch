diff --git a/monitor/src/builtins.c b/monitor/src/builtins.c
index fbf3bf3..4edf61c 100644
--- a/monitor/src/builtins.c
+++ b/monitor/src/builtins.c
@@ -159,7 +159,7 @@ EXPORT int __cache_l2_none()
 EXPORT int __cache_l2_32k()
 {
     int32_t scratch_delta = __cache_l2_size() - (32 << 10);
-    uint32_t scratch_size  = kernel_config_l2.L2_scratch_size;
+    int32_t scratch_size  = kernel_config_l2.L2_scratch_size;
     if (-scratch_delta > scratch_size) return 0;
     kernel_config_l2.L2_scratch_size += scratch_delta;
 
@@ -173,7 +173,7 @@ EXPORT int __cache_l2_32k()
 EXPORT int __cache_l2_64k()
 {
     int32_t scratch_delta = __cache_l2_size() - (64 << 10);
-    uint32_t scratch_size  = kernel_config_l2.L2_scratch_size;
+    int32_t scratch_size  = kernel_config_l2.L2_scratch_size;
     if (-scratch_delta > scratch_size) return 0;
     kernel_config_l2.L2_scratch_size += scratch_delta;
 
@@ -187,7 +187,7 @@ EXPORT int __cache_l2_64k()
 EXPORT int __cache_l2_128k()
 {
     int32_t scratch_delta = __cache_l2_size() - (128 << 10);
-    uint32_t scratch_size  = kernel_config_l2.L2_scratch_size;
+    int32_t scratch_size  = kernel_config_l2.L2_scratch_size;
     if (-scratch_delta > scratch_size) return 0;
     kernel_config_l2.L2_scratch_size += scratch_delta;
 
@@ -205,7 +205,7 @@ EXPORT int __cache_l2_512k() { return 0; }
 EXPORT int __cache_l2_256k()
 {
     int32_t scratch_delta = __cache_l2_size() - (256 << 10);
-    uint32_t scratch_size  = kernel_config_l2.L2_scratch_size;
+    int32_t scratch_size  = kernel_config_l2.L2_scratch_size;
     if (-scratch_delta > scratch_size) return 0;
     kernel_config_l2.L2_scratch_size += scratch_delta;
 
@@ -219,7 +219,7 @@ EXPORT int __cache_l2_256k()
 EXPORT int __cache_l2_512k()
 {
     int32_t scratch_delta = __cache_l2_size() - (512 << 10);
-    uint32_t scratch_size  = kernel_config_l2.L2_scratch_size;
+    int32_t scratch_size  = kernel_config_l2.L2_scratch_size;
     if (-scratch_delta > scratch_size) return 0;
     kernel_config_l2.L2_scratch_size += scratch_delta;
 
